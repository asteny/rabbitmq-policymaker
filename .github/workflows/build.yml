on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build & Upload release

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install git+https://github.com/asteny/rabbitmq-policymaker
      - name: Build project
        run: |
          pyinstaller main.spec
          zip --junk-paths ./dist/rabbitmq_policymaker.zip ./dist/rabbitmq_policymaker
          ls -lah ./dist/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.UPLOAD }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.UPLOAD }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/rabbitmq_policymaker.zip
          asset_name: rabbitmq_policymaker.zip
          asset_content_type: application/zip
